---
- include_vars: firewall.yml

- include_role:
    name: firewall
    private: yes

- name: Check for existing APM install
  stat:
    path: '{{ installation_path }}'
  register: apm_stat

- name: Copy installer properties
  template:
    src: installer.response.j2
    dest: /root/apm.installer.properties
  when: not apm_stat.stat.exists

- name: Copy EULA file
  template:
    src: ca-eula.txt.j2
    dest: /root/ca-eula.txt
  when: not apm_stat.stat.exists  

- name: Copy hosts file
  copy:
    src: /etc/hosts
    dest: /etc/hosts
    force: yes
    owner: root
    group: root
    mode: 0644
  when: not apm_stat.stat.exists

- name: Copy APM Agents
  copy:
    src: '{{ apm_agents_path }}'
    dest: /root/agents/
    mode: 0755
    remote_src: '{{ apm_agents_remote_src }}'
  when: not apm_stat.stat.exists

- name: Copy APM installer
  copy:
    src: '{{ apm_installer_path }}'
    dest: /root/installIntroscope.bin
    mode: 0700
    remote_src: '{{ apm_installer_remote_src }}'
  when: not apm_stat.stat.exists

- name: Install APM
  command: /root/installIntroscope.bin -i silent -f /root/apm.installer.properties
  when: not apm_stat.stat.exists
  register: apm_install_status

- name: Start Enterprise Manager
  command: ./EMCtrl.sh start
  args: 
   chdir: /opt/CA/Introscope/bin
  when: not apm_stat.stat.exists
  register: apm_em_status

- name: Sleep 60 seconds while EM Starts
  wait_for: timeout=60
  delegate_to: localhost
  when: not apm_stat.stat.exists

- name: Start Web View
  command: ./WVCtrl.sh start
  args:
   chdir: /opt/CA/Introscope/bin
  when: not apm_stat.stat.exists
  register: apm_wv_status

- name: Set fact to indicate whether or not the APM install was performed
  set_fact:
    apm_install_performed:
      "{ '{{ ansible_hostname }}': {{ apm_install_status.changed }} }"
